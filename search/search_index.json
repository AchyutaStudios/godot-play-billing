{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Welcome to the Godot Play Billing Library! This guide will help you quickly integrate Google Play Billing into your Godot projects.</p> <p>This plugin simplifies integration with the Google Play Billing system by providing a GDScript-based interface. Developers can easily implement billing features without needing to write any Kotlin or Java code, making it accessible even for those without prior Android development experience.</p>"},{"location":"#quick-start","title":"Quick Start","text":"<p>To get started, follow these steps:</p> <ul> <li>Download the Library.</li> <li>Follow Installation Guide.</li> </ul>"},{"location":"#compatibility-information","title":"Compatibility Information","text":"<ul> <li>Supported Godot Version: 4.2 and above</li> <li>Google Play Billing Library Version: 7.1.1</li> <li>Android Requirements:<ul> <li>Minimum SDK Version: 24</li> </ul> </li> </ul>"},{"location":"#see-also","title":"See Also","text":"<p>To successfully integrate this library, it\u2019s essential to understand the fundamentals of the Google Play Billing system. The following resources provide a comprehensive overview:</p> <ul> <li>Google Play's billing system.</li> <li>Integrate the Google Play Billing Library into your app.</li> </ul>"},{"location":"integrate/","title":"Integrate Play Billing","text":"<p>Before proceeding with the integration, please ensure that you have completed the following steps:</p> <ol> <li>Set Up Your Google Play Console Account: Make sure your app is created and configured in the Google Play Console.</li> <li>Configure In-App Purchase Products: Set up the required in-app purchase products in the Google Play Console, as these will be necessary for testing and implementing the billing functionality.</li> </ol> <p>Note: The Google Play billing server only connects with APKs downloaded from the Play Store. Ensure you have created at least an internal release in the Play Console so you can download the app from the Play Store for testing purposes.</p>"},{"location":"integrate/#add-playbilling-node-to-your-scene","title":"Add PlayBilling Node to your scene","text":"<p>Once the plugin is enabled, the PlayBilling node will appear in the Node Hierarchy.</p> <p></p> <p>Simply add the PlayBilling node to your scene to begin integrating Google Play Billing.</p>"},{"location":"integrate/#initialise","title":"Initialise","text":"<p>To get started, obtain a reference to the PlayBilling node:</p> <pre><code>@onready var _play_billing: PlayBilling = $PlayBilling\n</code></pre> <p>Use start_connection to establish a connection to the Play Billing server:</p> <pre><code>@onready var _play_billing: PlayBilling = $PlayBilling\n\nfunc _ready():\n    _play_billing.start_connection()\n</code></pre>"},{"location":"integrate/#connection-success","title":"Connection Success","text":"<p>Upon a successful connection, the PlayBilling node emits a connected signal.</p> <p>After the connection is established, query the product details. Important: A product query must be completed successfully before calling purchase or subscribe; otherwise, they will return an error.</p> <p>query_product_details function accepts two arguments:</p> <ol> <li>Array of product IDs.</li> <li>ProductType enum.</li> </ol> <pre><code>func _on_play_billing_connected() -&gt; void:\n    _play_billing.query_product_details([\"product_ids\"], PlayBilling.ProductType.INAPP)\n</code></pre>"},{"location":"integrate/#connection-error","title":"Connection Error","text":"<p>Upon failed connection, the PlayBilling node emits a <code>connect_error</code> signal. Use the <code>error_code</code> and <code>debug_message</code> for logging.</p> <pre><code>func _on_play_billing_connect_error(error_code: PlayBilling.BillingResponseCode, debug_message: String) -&gt; void:\n    print(error_code, debug_message)\n</code></pre>"},{"location":"integrate/#displaying-available-products","title":"Displaying Available Products","text":"<p>Once the product query is successful, the product_details_query_completed signal is emitted. If the query fails, the product_details_query_error signal is emitted instead.</p> <pre><code>func _on_play_billing_product_details_query_completed(product_detail_list: Array[ProductDetail]) -&gt; void:\n    print(product_detail_list)\n\n\nfunc _on_play_billing_product_details_query_error(error_code: PlayBilling.BillingResponseCode, debug_message: String, product_id_list: Array[String]) -&gt; void:\n    print(error_code, debug_message, product_id_list)\n</code></pre> <p>The signal emits list of ProductDetail. Use the information provided in each ProductDetail to display relevant product information for users.</p>"},{"location":"integrate/#launch-purchase-flow","title":"Launch Purchase Flow","text":""},{"location":"integrate/#purchasing-a-product","title":"Purchasing a Product","text":"<p>To launch purchase flow, use the purchase method. This method requires the <code>product_id</code> which is the unique identifier for the product.</p> <pre><code>_play_billing.purchase(\"product_id\")\n</code></pre>"},{"location":"integrate/#subscribing-to-a-product","title":"Subscribing to a Product","text":"<p>To launch subscription flow, use the subscribe method. This method requires the <code>product_id</code> which is the unique identifier for the product, and an optional <code>offer_token</code>.</p> <pre><code>_play_billing.subscribe(\"product_id\", \"offer_token\")\n</code></pre>"},{"location":"integrate/#processing-purchased-items","title":"Processing Purchased Items","text":"<p>After a succesfull purchase or subscribe call, the payment flow will emit the purchases_updated signal. If payment flow fails purchases_updated_error signal is emitted instead.</p> <pre><code>func _on_play_billing_purchases_updated(purchases: Array[Purchase]) -&gt; void:\n    for purchase in purchases:\n        _process_purchase(purchase)\n\n\nfunc _on_play_billing_purchases_updated_error(error_code: PlayBilling.BillingResponseCode, debug_message: String) -&gt; void:\n    print(error_code, debug_message)\n</code></pre>"},{"location":"integrate/#acknowledge-products","title":"Acknowledge Products","text":"<p>Products need to be acknowledged to complete the billing cycle. Use the acknowledge_purchase method to acknowledge purchases.</p> <pre><code>func _process_purchase(purchase: Purchase) -&gt; void:\n# Save purchase for future verification.\n    if purchase.purchase_state == Purchase.PurchaseState.PURCHASED:\n        if \"product_id\" in purchase.product_ids and !purchase.is_acknowledged:\n            _play_billing.acknowledge_purchase(purchase.purchase_token)\n</code></pre> <p>Once a product is successfully acknowledged, the purchase_acknowledged signal is emitted. If an error occurs, the purhase_acknowledgement_error signal is emitted instead.</p> <pre><code>func _on_play_billing_purchase_acknowledged(purchase_token: String) -&gt; void:\n    # _purchase is the saved list of purchases.\n    for purchase: Purchase in _purchases:\n        if purchase_token == purchase.purchase_token:\n            if \"product_id\" in purchase.product_ids:\n                # Award item to user.\n\n\nfunc _on_play_billing_purchase_acknowledgement_error(error_code: PlayBilling.BillingResponseCode, debug_message: String, purchase_token: String) -&gt; void:\n    print(error_code, debug_message, purchase_token)\n</code></pre>"},{"location":"integrate/#consume-products","title":"Consume Products","text":"<p>Consumable products, such as coins, can be purchased multiple times. To allow repeat purchases, consume the product after a successful purchase by calling consume_purchase.  This automatically acknowledges the purchase, enabling the user to buy the product again.</p> <pre><code>func _process_purchase(purchase: Purchase) -&gt; void:\n    # Save purchase for future verification.\n    if purchase.purchase_state == Purchase.PurchaseState.PURCHASED:\n        if \"product_id\" in purchase.product_ids:\n            _play_billing.consume_purchase(purchase.purchase_token)\n</code></pre> <p>Once a product is successfully consumed, the purchase_consumed signal is emitted. If an error occurs, the purhase_consumption_error signal is emitted instead.</p> <p><pre><code>func _on_play_billing_purchase_consumed(purchase_token: String) -&gt; void:\n    # _purchase is the saved list of purchases.\n    for purchase: Purchase in _purchases:\n        if purchase_token == purchase.purchase_token:\n            if \"product_id\" in purchase.product_ids:\n                # Award product to user.\n\n\nfunc _on_play_billing_purchase_consumption_error(error_code: PlayBilling.BillingResponseCode, debug_message: String, purchase_token: String) -&gt; void:\n    print(error_code, debug_message, purchase_token)\n</code></pre> Note: Consumable products do not require a separate call to acknowledge_purchase method as, consume_purchase automatically acknowledges them.</p>"},{"location":"integrate/#handling-pending-purchases","title":"Handling pending Purchases","text":"<p>Purchases can happen outside the app due to poor connection, pending transactions or various other reasons. It is necessary to handle such purchases. Call query_purchase method to query purchases. query_purchase requires ProductType argument. Generally you would like to query purchase after product details query is completed or when billing client is connected.</p> <pre><code>_play_billing.query_purchase(PlayBilling.ProductType.INAPP)\n</code></pre> <p>After successful query it emits query_purchases_response. If error occurs query_purchase_error is emitted instead.</p> <pre><code>func _on_play_billing_query_purchases_response(purchase_list: Array[Purchase]) -&gt; void:\n    for purchase in purchase_list:\n        _process_purchase(purchase)\n\n\nfunc _on_play_billing_query_purchases_error(error_code: PlayBilling.BillingResponseCode, debug_message: String) -&gt; void:\n    print(error_code, debug_message)\n</code></pre>"},{"location":"api-reference/","title":"Api Reference","text":"<p>This section provides links to the core classes and models available in the GodotPlayBilling library.</p> <ul> <li>PlayBilling</li> <li>Models<ul> <li>Purchase</li> <li>ProductDetail<ul> <li>ProductDetail.PricingPhase</li> <li>ProductDetail.OneTimePurchaseOfferDetails</li> <li>ProductDetail.InstallmentPlanDetails</li> <li>ProductDetail.SubscriptionOfferDetails</li> </ul> </li> </ul> </li> </ul>"},{"location":"api-reference/play-billing/","title":"Play Billing","text":"<p>PlayBilling class for managing Google Play Billing functionalities.</p>"},{"location":"api-reference/play-billing/#description","title":"Description","text":"<p>The <code>PlayBilling</code> class handles Google Play Billing functionalities, including managing purchases, querying product details, and handling connection states.</p>"},{"location":"api-reference/play-billing/#signals","title":"Signals","text":""},{"location":"api-reference/play-billing/#connected","title":"connected","text":"<p><pre><code>signal connected\n</code></pre> Emitted when successfully connected to the billing service.</p>"},{"location":"api-reference/play-billing/#disconnected","title":"disconnected","text":"<p><pre><code>signal disconnected\n</code></pre> Emitted when disconnected from the billing service.</p>"},{"location":"api-reference/play-billing/#connect_error","title":"connect_error","text":"<p><pre><code>signal connect_error(error_code: BillingResponseCode, debug_message: String)\n</code></pre> Emitted when there is a connection error.</p>"},{"location":"api-reference/play-billing/#query_purchases_response","title":"query_purchases_response","text":"<p><pre><code>signal query_purchases_response(purchase_list: Array[Purchase])\n</code></pre> Emitted when a query for purchases is successful.</p>"},{"location":"api-reference/play-billing/#query_purchase_error","title":"query_purchase_error","text":"<p><pre><code>signal query_purchases_error(error_code: BillingResponseCode, debug_message: String)\n</code></pre> Emitted when a query for purchases fails.</p>"},{"location":"api-reference/play-billing/#product_details_query_completed","title":"product_details_query_completed","text":"<p><pre><code>signal product_details_query_completed(product_detail_list: Array[ProductDetail])\n</code></pre> Emitted when product details are successfully queried.</p>"},{"location":"api-reference/play-billing/#product_details_query_error","title":"product_details_query_error","text":"<p><pre><code>signal product_details_query_error(error_code: BillingResponseCode, debug_message: String, product_id_list: Array[String])\n</code></pre> Emitted when querying product details fails.</p>"},{"location":"api-reference/play-billing/#purchases_updated","title":"purchases_updated","text":"<p><pre><code>signal purchases_updated(purchases: Array[Purchase])\n</code></pre> Emitted when the purchase list is updated.</p>"},{"location":"api-reference/play-billing/#purchases_updated_error","title":"purchases_updated_error","text":"<p><pre><code>signal purchases_updated_error(error_code: BillingResponseCode, debug_message: String)\n</code></pre> Emitted when an error occurs during purchase updates.</p>"},{"location":"api-reference/play-billing/#purchase_consumed","title":"purchase_consumed","text":"<p><pre><code>signal purchase_consumed(purchase_token: String)\n</code></pre> Emitted when a purchase is successfully consumed.</p>"},{"location":"api-reference/play-billing/#purchase_consumption_error","title":"purchase_consumption_error","text":"<p><pre><code>signal purchase_consumption_error(error_code: BillingResponseCode, debug_message: String, purchase_token: String)\n</code></pre> Emitted when there is an error consuming a purchase.</p>"},{"location":"api-reference/play-billing/#purchase_acknowledged","title":"purchase_acknowledged","text":"<p><pre><code>signal purchase_acknowledged(purchase_token: String)\n</code></pre> Emitted when a purchase is successfully acknowledged.</p>"},{"location":"api-reference/play-billing/#purchase_acknowledgement_error","title":"purchase_acknowledgement_error","text":"<p><pre><code>signal purchase_acknowledgement_error(error_code: BillingResponseCode, debug_message: String, purchase_token: String)\n</code></pre> Emitted when there is an error acknowledging a purchase.</p>"},{"location":"api-reference/play-billing/#enums","title":"Enums","text":""},{"location":"api-reference/play-billing/#billingresponsecode","title":"<code>BillingResponseCode</code>","text":"<p>Defines various billing response codes for error handling and success statuses.</p> <ul> <li><code>OK</code>: Billing operation completed successfully.</li> <li><code>USER_CANCELED</code>: The user canceled the operation.</li> <li><code>SERVICE_UNAVAILABLE</code>: Billing service is not available.</li> <li><code>BILLING_UNAVAILABLE</code>: Billing is not supported on this device.</li> <li><code>ITEM_UNAVAILABLE</code>: The item is not available for purchase.</li> <li><code>DEVELOPER_ERROR</code>: Invalid arguments provided to the API.</li> <li><code>ERROR</code>: Generic error.</li> <li><code>ITEM_ALREADY_OWNED</code>: The item has already been purchased.</li> <li><code>ITEM_NOT_OWNED</code>: The item was not owned by the user.</li> <li><code>NETWORK_ERROR</code>: Network issues occurred during the operation.</li> <li><code>SERVICE_DISCONNECTED</code>: The service is disconnected.</li> <li><code>FEATURE_NOT_SUPPORTED</code>: The feature is not supported.</li> <li><code>SERVICE_TIMEOUT</code>: The billing service timed out.</li> </ul>"},{"location":"api-reference/play-billing/#connectionstate","title":"<code>ConnectionState</code>","text":"<p>Represents the connection states of the PlayBilling service.</p> <ul> <li><code>DISCONNECTED</code>: Not connected to the billing service.</li> <li><code>CONNECTING</code>: Attempting to connect to the billing service.</li> <li><code>CONNECTED</code>: Successfully connected to the billing service.</li> <li><code>CLOSED</code>: Connection to the billing service has been closed.</li> </ul>"},{"location":"api-reference/play-billing/#producttype","title":"<code>ProductType</code>","text":"<p>Categorizes product types for billing.</p> <ul> <li><code>INAPP</code>: In-app product type.</li> <li><code>SUBS</code>: Subscription product type.</li> </ul>"},{"location":"api-reference/play-billing/#methods","title":"Methods","text":""},{"location":"api-reference/play-billing/#start_connection","title":"start_connection","text":"<pre><code>func start_connection() -&gt; void\n</code></pre> <p>Initiates a connection to the billing service.</p>"},{"location":"api-reference/play-billing/#end_connection","title":"end_connection","text":"<pre><code>func end_connection() -&gt; void\n</code></pre> <p>Ends the connection to the billing service.</p>"},{"location":"api-reference/play-billing/#is_ready","title":"is_ready","text":"<pre><code>func is_ready() -&gt; bool\n</code></pre> <p>Checks if the billing plugin is ready for operations.</p> <p>Returns:</p> <p><code>True</code> if the plugin is ready; otherwise, <code>False</code>.</p>"},{"location":"api-reference/play-billing/#get_connection_state","title":"get_connection_state","text":"<pre><code>func get_connection_state() -&gt; ConnectionState\n</code></pre> <p>Retrieves the current connection state of the billing service.</p> <p>Returns:</p> <p>The current <code>ConnectionState</code> of the plugin.</p>"},{"location":"api-reference/play-billing/#query_purchase","title":"query_purchase","text":"<pre><code>func query_purchase(type: ProductType) -&gt; void\n</code></pre> <p>Queries for purchases of a specific product type.</p> <p>Parameters:</p> <ul> <li><code>type</code>: The type of product to query (<code>INAPP</code> or <code>SUBS</code>).</li> </ul>"},{"location":"api-reference/play-billing/#query_product_details","title":"query_product_details","text":"<pre><code>func query_product_details(product_id_list: Array[String], type: ProductType) -&gt; void\n</code></pre> <p>Queries for product details based on the provided product IDs and type.</p> <p>Parameters:</p> <ul> <li><code>product_id_list</code>: A list of product IDs to query.</li> <li><code>type</code>: The type of product (<code>INAPP</code> or <code>SUBS</code>).</li> </ul>"},{"location":"api-reference/play-billing/#purchase","title":"purchase","text":"<pre><code>func purchase(product_id: String) -&gt; Dictionary\n</code></pre> <p>Initiates a purchase for the specified product ID.</p> <p>Parameters:</p> <ul> <li><code>product_id</code>: The ID of the product to purchase.</li> </ul> <p>Returns: A dictionary containing the purchase status.</p>"},{"location":"api-reference/play-billing/#subscribe","title":"subscribe","text":"<pre><code>func subscribe(product_id: String, selected_offer_token: String = \"\") -&gt; Dictionary\n</code></pre> <p>Initiates a subscription for the specified product ID with an optional offer token.</p> <p>Parameters:</p> <ul> <li><code>product_id</code>: The ID of the product to subscribe to.</li> <li><code>selected_offer_token</code>: An optional token for the selected offer (default is an empty string).</li> </ul> <p>Returns: A dictionary containing the subscription state.</p>"},{"location":"api-reference/play-billing/#consume_purchase","title":"consume_purchase","text":"<pre><code>func consume_purchase(purchase_token: String) -&gt; void\n</code></pre> <p>Consumes a purchase using the provided purchase token.</p> <p>Parameters:</p> <ul> <li><code>purchase_token</code>: The token of the purchase to consume.</li> </ul>"},{"location":"api-reference/play-billing/#acknowledge_purchase","title":"acknowledge_purchase","text":"<pre><code>func acknowledge_purchase(purchase_token: String) -&gt; void\n</code></pre> <p>Acknowledges a purchase using the provided purchase token.</p> <p>Parameters:</p> <ul> <li><code>purchase_token</code>: The token of the purchase to acknowledge.</li> </ul>"},{"location":"api-reference/play-billing/#string_to_product_type","title":"string_to_product_type","text":"<pre><code>static string_to_product_type(type_string: String) -&gt; ProductType\n</code></pre> <p>Converts a string representation of a product type to the corresponding <code>ProductType</code> enum.</p> <p>Parameters:</p> <ul> <li><code>type_string</code>: The string representing the product type (\"inapp\" or \"subs\").</li> </ul> <p>Returns: The corresponding <code>ProductType</code> enum value.</p>"},{"location":"api-reference/play-billing/#product_type_to_string","title":"product_type_to_string","text":"<pre><code>static product_type_to_string(type: ProductType) -&gt; String\n</code></pre> <p>Converts a <code>ProductType</code> enum value to its string representation.</p> <p>Parameters:</p> <ul> <li><code>type</code>: The <code>ProductType</code> enum value to convert.</li> </ul> <p>Returns: The string representation of the <code>ProductType</code>.</p>"},{"location":"api-reference/models/purchase/","title":"Purchase","text":"<p>Represents a single in-app purchase, encapsulating details such as order ID, product IDs, purchase state, and more.</p>"},{"location":"api-reference/models/purchase/#description","title":"Description","text":"<p>This class allows initialization of purchase details from JSON data and includes methods to represent the purchase as a string for easy logging or debugging. Each purchase object contains essential properties to track and verify in-app transactions and their state.</p>"},{"location":"api-reference/models/purchase/#properties","title":"Properties","text":"<ul> <li><code>developer_payload</code>: Developer-defined payload associated with this purchase.</li> <li><code>order_id</code>: Unique order ID associated with this purchase.</li> <li><code>original_json</code>: Original JSON string representing the purchase details as provided by the billing API.</li> <li><code>package_name</code>: Package name of the application where the purchase was made.</li> <li><code>product_ids</code>: Array of product IDs purchased in this transaction.</li> <li><code>purchase_token</code>: Token uniquely identifying this purchase, used for validation and acknowledgment.</li> <li><code>quantity</code>: Quantity of the purchased item(s).</li> <li><code>signature</code>: Digital signature for verifying the purchase integrity and authenticity.</li> <li><code>is_acknowledged</code>: Indicates whether the purchase has been acknowledged by the app.</li> <li><code>is_auto_renewing</code>: Indicates if the purchase is set to auto-renew (for subscriptions).</li> <li><code>purchase_time</code>: Timestamp of the purchase, in milliseconds.</li> <li><code>purchase_state</code>: State of the purchase, as defined in the PurchaseState.</li> </ul>"},{"location":"api-reference/models/purchase/#enum","title":"Enum","text":""},{"location":"api-reference/models/purchase/#purchasestate","title":"<code>PurchaseState</code>","text":"<p>Represents potential states of a purchase.</p> <ul> <li><code>UNSPECIFIED_STATE</code>: Unspecified purchase state.</li> <li><code>PURCHASED</code>: Purchase has been completed and approved.</li> <li><code>PENDING</code>: Purchase is pending approval or completion.</li> </ul>"},{"location":"api-reference/models/purchase/#methods","title":"Methods","text":""},{"location":"api-reference/models/purchase/#constructor","title":"Constructor","text":"<pre><code>func _init(developer_payload: String, order_id: String, original_json: String, package_name: String, product_ids: Array[String], purchase_token: String, quantity: int, signature: String, is_acknowledged: bool, is_auto_renewing: bool, purchase_time: int, purchase_state: PurchaseState)\n</code></pre> <p>Initializes the Purchase object with provided purchase details.</p> <ul> <li>Parameters:</li> <li><code>developer_payload</code>: Developer-defined payload for validation purposes.</li> <li><code>order_id</code>: Unique order ID.</li> <li><code>original_json</code>: JSON string of the purchase details.</li> <li><code>package_name</code>: Application's package name.</li> <li><code>product_ids</code>: Array of product IDs in this purchase.</li> <li><code>purchase_token</code>: Unique token for this purchase.</li> <li><code>quantity</code>: Quantity of items purchased.</li> <li><code>signature</code>: Signature for integrity verification.</li> <li><code>is_acknowledged</code>: Boolean indicating if the purchase is acknowledged.</li> <li><code>is_auto_renewing</code>: Boolean indicating if the purchase is auto-renewing.</li> <li><code>purchase_time</code>: Timestamp of the purchase.</li> <li><code>purchase_state</code>: Purchase state as defined in <code>enum PurchaseState</code>.</li> </ul>"},{"location":"api-reference/models/purchase/#from_json","title":"from_json","text":"<pre><code>static func from_json(data: Variant) -&gt; Purchase\n</code></pre> <p>Static method to create a <code>Purchase</code> instance from JSON data.</p> <p>Parameters:</p> <ul> <li><code>data</code>: JSON-like Variant containing purchase details.</li> </ul> <p>Returns: A Purchase object initialized with JSON data.</p>"},{"location":"api-reference/models/purchase/#to_string","title":"to_string","text":"<pre><code>func to_string() -&gt; String\n</code></pre> <p>Provides a detailed string representation of the purchase object, listing all fields.</p> <p>Returns: A string containing the details of the purchase.</p>"},{"location":"api-reference/models/product-detail/","title":"ProductDetail","text":"<p>Represents the details of a product in the Play Billing system.</p>"},{"location":"api-reference/models/product-detail/#description","title":"Description","text":"<p>The ProductDetail class holds various attributes related to a product, including its name, description, pricing, and more.</p>"},{"location":"api-reference/models/product-detail/#properties","title":"Properties","text":"<ul> <li><code>name</code>: The name of the product.</li> <li><code>description</code>: A brief description of the product.</li> <li><code>one_time_purchase_offer_details</code>: Details about one-time purchase offers.</li> <li><code>product_id</code>: The unique identifier for the product.</li> <li><code>product_type</code>: The type of the product (e.g., in-app product, subscription).</li> <li><code>subscription_offer_detail_list</code>: List of subscription offer details.</li> <li><code>title</code>: The title of the product.</li> </ul>"},{"location":"api-reference/models/product-detail/#methods","title":"Methods","text":""},{"location":"api-reference/models/product-detail/#constructor","title":"Constructor","text":"<pre><code>func _init(name: String, description: String, one_time_purchase_offer_details: OneTimePurchaseOfferDetails, product_id: String, product_type: String, subscription_offer_detail_list: Array[SubscriptionOfferDetails], title: String)\n</code></pre> <p>Initializes a new instance of ProductDetail.</p> <p>This constructor takes the essential parameters for creating a product detail instance, including name, description, and other relevant data.</p> <p>Parameters:</p> <ul> <li><code>name</code>: The name of the product.</li> <li><code>description</code>: A brief description of the product.</li> <li><code>one_time_purchase_offer_details</code>: Details about one-time purchase offers.</li> <li><code>product_id</code>: The unique identifier for the product.</li> <li><code>product_type</code>: The type of the product, converted from string to enum.</li> <li><code>subscription_offer_detail_list</code>: List of subscription offer details.</li> <li><code>title</code>: The title of the product.</li> </ul>"},{"location":"api-reference/models/product-detail/#from_json","title":"from_json","text":"<pre><code>static func from_json(data: Variant) -&gt; ProductDetail\n</code></pre> <p>Static method to create a ProductDetail instance from JSON data.</p> <p>This method parses the JSON data and initializes a new ProductDetail instance with the parsed values.</p> <p>Parameters:</p> <ul> <li><code>data</code>: The JSON data as a Variant.</li> </ul> <p>Returns: A new instance of ProductDetail created from the JSON data.</p>"},{"location":"api-reference/models/product-detail/#to_string","title":"to_string","text":"<pre><code>func to_string() -&gt; String\n</code></pre> <p>Returns a string representation of the ProductDetail instance.</p> <p>Returns: A string detailing the ProductDetail attributes, including title, name, description, product ID, product type, one-time purchase offer details, and subscription offer details list.</p>"},{"location":"api-reference/models/product-detail/installment-plan-details/","title":"ProductDetail.InstallmentPlanDetails","text":"<p>Represents the details of an installment plan.</p>"},{"location":"api-reference/models/product-detail/installment-plan-details/#description","title":"Description","text":"<p>The InstallmentPlanDetails class holds information about the commitment payments for an installment plan.</p>"},{"location":"api-reference/models/product-detail/installment-plan-details/#properties","title":"Properties","text":"<ul> <li><code>installment_plan_commitment_payments_count</code>: Number of commitment payments.</li> <li><code>subsequent_installment_plan_commitment_payments_count</code>: Number of subsequent commitment payments.</li> </ul>"},{"location":"api-reference/models/product-detail/installment-plan-details/#methods","title":"Methods","text":""},{"location":"api-reference/models/product-detail/installment-plan-details/#constructor","title":"Constructor","text":"<pre><code>func _init(installment_plan_commitment_payments_count: int, subsequent_installment_plan_commitment_payments_count: int)\n</code></pre> <p>Initializes a new instance of InstallmentPlanDetails.</p> <p>Parameters:</p> <ul> <li><code>installment_plan_commitment_payments_count</code>: Number of commitment payments.</li> <li><code>subsequent_installment_plan_commitment_payments_count</code>: Number of subsequent commitment payments.</li> </ul>"},{"location":"api-reference/models/product-detail/installment-plan-details/#from_json","title":"from_json","text":"<pre><code>static func from_json(data: Variant) -&gt; InstallmentPlanDetails\n</code></pre> <p>Static method to create an InstallmentPlanDetails instance from JSON data.</p> <p>This method parses the JSON data and initializes a new InstallmentPlanDetails instance with the parsed values.</p> <p>Parameters:</p> <ul> <li><code>data</code>: The JSON data as a Variant.</li> </ul> <p>Returns: A new instance of InstallmentPlanDetails created from the JSON data.</p>"},{"location":"api-reference/models/product-detail/installment-plan-details/#to_string","title":"to_string","text":"<pre><code>func to_string() -&gt; String\n</code></pre> <p>Returns a string representation of the InstallmentPlanDetails instance.</p> <p>Returns: A string detailing the InstallmentPlanDetails attributes, including commitment payments and subsequent commitment payments.</p>"},{"location":"api-reference/models/product-detail/pricing-phase/","title":"ProductDetail.PricingPhase","text":"<p>Represents the pricing phase of a product.</p>"},{"location":"api-reference/models/product-detail/pricing-phase/#description","title":"Description","text":"<p>This class holds details about the billing cycle, pricing, and recurrence mode for a pricing phase.</p>"},{"location":"api-reference/models/product-detail/pricing-phase/#properties","title":"Properties","text":"<ul> <li><code>billing_cycle_count</code>: The number of billing cycles.</li> <li><code>billing_period</code>: The billing period (e.g., monthly).</li> <li><code>formatted_price</code>: The price formatted for display.</li> <li><code>price_amount_micros</code>: The price amount in micros.</li> <li><code>price_currency_code</code>: The currency code for the price.</li> <li><code>recurrence_mode</code>: The recurrence mode for billing.</li> </ul>"},{"location":"api-reference/models/product-detail/pricing-phase/#methods","title":"Methods","text":""},{"location":"api-reference/models/product-detail/pricing-phase/#constructor","title":"Constructor","text":"<pre><code>func _init(billing_cycle_count: int, billing_period: String, formatted_price: String, price_amount_micros: int, price_currency_code: String, recurrence_mode: int)\n</code></pre> <p>Initializes a new instance of PricingPhase.</p> <p>Parameters:</p> <ul> <li><code>billing_cycle_count</code>: Number of billing cycles.</li> <li><code>billing_period</code>: The period of billing (e.g., monthly).</li> <li><code>formatted_price</code>: The price formatted for display.</li> <li><code>price_amount_micros</code>: The price amount in micros.</li> <li><code>price_currency_code</code>: The currency code for the price.</li> <li><code>recurrence_mode</code>: The recurrence mode for billing.</li> </ul>"},{"location":"api-reference/models/product-detail/pricing-phase/#from_json","title":"from_json","text":"<pre><code>static func from_json(data: Variant) -&gt; PricingPhase\n</code></pre> <p>Static method to create a PricingPhase instance from JSON data.</p> <p>This method parses the JSON data and initializes a new PricingPhase instance with the parsed values.</p> <p>Parameters:</p> <ul> <li><code>data</code>: The JSON data as a Variant.</li> </ul> <p>Returns: A new instance of PricingPhase created from the JSON data.</p>"},{"location":"api-reference/models/product-detail/pricing-phase/#to_string","title":"to_string","text":"<pre><code>func to_string() -&gt; String\n</code></pre> <p>Returns a string representation of the PricingPhase instance.</p> <p>Returns: A string detailing the PricingPhase attributes, including billing cycle count, billing period, formatted price, price amount in micros, price currency code, and recurrence mode.</p>"},{"location":"api-reference/models/product-detail/purchase-offer/","title":"ProductDetail.OneTimePurchaseOfferDetails","text":"<p>Represents details about a one-time purchase offer.</p>"},{"location":"api-reference/models/product-detail/purchase-offer/#description","title":"Description","text":"<p>The OneTimePurchaseOfferDetails class holds pricing information related to a one-time purchase offer.</p>"},{"location":"api-reference/models/product-detail/purchase-offer/#properties","title":"Properties","text":"<ul> <li><code>formatted_price</code>: The formatted price for display.</li> <li><code>price_amount_micros</code>: The price amount in micros.</li> <li><code>price_currency_code</code>: The currency code for the price.</li> </ul>"},{"location":"api-reference/models/product-detail/purchase-offer/#methods","title":"Methods","text":""},{"location":"api-reference/models/product-detail/purchase-offer/#constructor","title":"Constructor","text":"<pre><code>func _init(formatted_price: String, price_amount_micros: float, price_currency_code: String)\n</code></pre> <p>Initializes a new instance of OneTimePurchaseOfferDetails.</p> <p>Parameters:</p> <ul> <li><code>formatted_price</code>: The formatted price for display.</li> <li><code>price_amount_micros</code>: The price amount in micros.</li> <li><code>price_currency_code</code>: The currency code for the price.</li> </ul>"},{"location":"api-reference/models/product-detail/purchase-offer/#from_json","title":"from_json","text":"<pre><code>static func from_json(data: Variant) -&gt; OneTimePurchaseOfferDetails\n</code></pre> <p>Static method to create a OneTimePurchaseOfferDetails instance from JSON data.</p> <p>This method parses the JSON data and initializes a new OneTimePurchaseOfferDetails instance with the parsed values.</p> <p>Parameters:</p> <ul> <li><code>data</code>: The JSON data as a Variant.</li> </ul> <p>Returns: A new instance of OneTimePurchaseOfferDetails created from the JSON data.</p>"},{"location":"api-reference/models/product-detail/purchase-offer/#to_string","title":"to_string","text":"<pre><code>func to_string() -&gt; String\n</code></pre> <p>Returns a string representation of the OneTimePurchaseOfferDetails instance.</p> <p>Returns: A string detailing the OneTimePurchaseOfferDetails attributes, including formatted price, price amount in micros, and price currency code.</p>"},{"location":"api-reference/models/product-detail/subscription-offer-details/","title":"ProductDetail.SubscriptionOfferDetails","text":"<p>Represents details about a subscription offer.</p>"},{"location":"api-reference/models/product-detail/subscription-offer-details/#description","title":"Description","text":"<p>The SubscriptionOfferDetails class holds information about the subscription offer, including its base plan ID, pricing phases, and installment plan details.</p>"},{"location":"api-reference/models/product-detail/subscription-offer-details/#properties","title":"Properties","text":"<ul> <li><code>base_plan_id</code>: The unique identifier for the base plan.</li> <li><code>installment_plan_details</code>: Details about the InstallmentPlanDetails.</li> <li><code>offer_id</code>: The unique identifier for the offer.</li> <li><code>offer_tags</code>: Tags associated with the offer.</li> <li><code>offer_token</code>: The token for the offer.</li> <li><code>pricing_phase_list</code>: List of PricingPhase for the offer.</li> </ul>"},{"location":"api-reference/models/product-detail/subscription-offer-details/#methods","title":"Methods","text":""},{"location":"api-reference/models/product-detail/subscription-offer-details/#constructor","title":"Constructor","text":"<pre><code>func _init(base_plan_id: String, installment_plan_details: InstallmentPlanDetails, offer_id: String, offer_tags: Array, offer_token: String, pricing_phase_list: Array[PricingPhase])\n</code></pre> <p>Initializes a new instance of SubscriptionOfferDetails.</p> <p>Parameters:</p> <ul> <li><code>base_plan_id</code>: The unique identifier for the base plan.</li> <li><code>installment_plan_details</code>: Details about the installment plan.</li> <li><code>offer_id</code>: The unique identifier for the offer.</li> <li><code>offer_tags</code>: Tags associated with the offer.</li> <li><code>offer_token</code>: The token for the offer.</li> <li><code>pricing_phase_list</code>: List of pricing phases for the offer.</li> </ul>"},{"location":"api-reference/models/product-detail/subscription-offer-details/#from_json","title":"from_json","text":"<pre><code>static func from_json(json_string: String) -&gt; SubscriptionOfferDetails\n</code></pre> <p>Static method to create a SubscriptionOfferDetails instance from JSON data.</p> <p>This method parses the JSON string and initializes a new SubscriptionOfferDetails instance with the parsed values.</p> <p>Parameters   - <code>json_string</code>: The JSON data as a string.</p> <p>Returns: A new instance of SubscriptionOfferDetails created from the JSON data.</p>"},{"location":"api-reference/models/product-detail/subscription-offer-details/#to_string","title":"to_string","text":"<pre><code>func to_string() -&gt; String\n</code></pre> <p>Returns a string representation of the SubscriptionOfferDetails instance.</p> <p>Returns: A string detailing the SubscriptionOfferDetails attributes, including base plan ID, offer ID, tags, token, and pricing phases.</p>"},{"location":"get-started/download/","title":"Download","text":"<p>Welcome to the download page for the Godot Play Billing Library! Here, you can easily obtain the latest version of the library and start integrating Google Play Billing into your Godot projects. Follow the instructions below to download and set up the library quickly.</p>"},{"location":"get-started/download/#prerequisites","title":"Prerequisites","text":"<ul> <li>Godot: v4.2 or above</li> <li>Google Play Console Account<ul> <li>An account with an app created for deploying this plugin.</li> <li>Follow this guide to get started: How to get started with Play Console</li> </ul> </li> </ul>"},{"location":"get-started/download/#download-plugin","title":"Download plugin","text":""},{"location":"get-started/download/#download-from-the-godot-asset-store","title":"Download from the Godot Asset Store.","text":"<ol> <li>Open the <code>AssetLib</code> tab in the Godot Editor.</li> <li>Enter GodotPlayBilling in the search bar. </li> <li>Find the GodotPlayBilling plugin in the search results and click Download.</li> </ol>"},{"location":"get-started/download/#manual-download-obtain-the-plugin-directly-from-github","title":"Manual Download: Obtain the plugin directly from GitHub.","text":"<ol> <li>Visit the GodotPlayBilling GitHub Releases page.</li> <li>Download the desired version of the plugin from the available releases.</li> </ol> <p>Note: The plugin includes all necessary <code>.aar</code> and <code>.gdap</code> files for setup. Developers do not need to download or set up these files separately.</p>"},{"location":"get-started/installation/","title":"Installation","text":""},{"location":"get-started/installation/#enable-plugin","title":"Enable Plugin","text":"<p>After downloading the plugin from AssetLib, it needs to be enabled manually in the Godot editor. Follow these steps to enable the plugin:</p> <ol> <li>In the Godot editor, go to <code>Project &gt; Project Settings</code>.</li> <li>Navigate to the <code>Plugins</code> section.</li> <li>Locate <code>GodotPlayBilling</code> and enable it.</li> </ol> <p></p> <p>Note: The plugin includes all necessary <code>.aar</code> and <code>.gdap</code> files for setup. Developers do not need to separately activate the plugin in the Android export settings.</p>"},{"location":"get-started/installation/#install-android-build-template","title":"Install Android Build Template","text":"<p>If the Android Build Template is already set up, you can skip this step. Otherwise, follow these steps:</p> <ol> <li>In Godot Editor, go to <code>Projects &gt; Install Android Build</code>Template`.</li> </ol> <p></p> <ol> <li>Click <code>Install</code> to confirm and set up the Build Template.</li> </ol> <p></p>"},{"location":"get-started/installation/#update-android-manifest","title":"Update Android Manifest","text":"<p>To enable Play Billing permissions, follow these steps:</p> <ol> <li>From the project root, navigate to <code>android &gt; build</code>.</li> <li>Locate <code>AndroidManifest.xml</code> and open it in your preferred text editor.</li> <li>Add the following line within the  tag: <pre><code>&lt;uses-permission android:name=\"com.android.vending.BILLING\" /&gt;\n</code></pre> <p>The updated manifest file should look like this:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:versionCode=\"1\"\n    android:versionName=\"1.0\"\n    android:installLocation=\"auto\" &gt;\n\n    &lt;uses-permission android:name=\"com.android.vending.BILLING\" /&gt;\n    ...\n</code></pre>"}]}